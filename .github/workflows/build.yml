name: Build

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build, Test, and Analyze
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Restore .NET dependencies
        run: dotnet restore
        working-directory: api/Basic3TierAPI
      
      - name: Build .NET project
        run: dotnet build --no-restore --configuration Release
        working-directory: api/Basic3TierAPI
      
      - name: Run .NET tests
        run: dotnet test --no-build --configuration Release --verbosity normal
        working-directory: api/Basic3TierAPI
      
      - name: Install frontend dependencies
        run: npm install
        working-directory: ui
      
      - name: Build frontend
        run: npm run build
        working-directory: ui

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
      
      - name: Build and push Docker image for backend (API)
        run: |
          docker build -t ikrush/basic-three-tier-api:latest -f api/Dockerfile backend
          docker push ikrush/basic-three-tier-api:latest
      
      - name: Build and push Docker image for frontend (UI)
        run: |
          docker build -t ikrush/basic-three-tier-ui:latest -f ui/Dockerfile frontend
          docker push ikrush/basic-three-tier-ui:latest  
           
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      
      # - name: SonarQube Quality Gate
      #   uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
